/**
 * WhatsApp Cloud APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  MarkMessageAsReadRequest,
  markMessageAsReadRequestSchema,
} from '../models/markMessageAsReadRequest';
import { Message, messageSchema } from '../models/message';
import {
  SendMessageResponse,
  sendMessageResponseSchema,
} from '../models/sendMessageResponse';
import {
  SuccessResponse,
  successResponseSchema,
} from '../models/successResponse';
import { string } from '../schema';
import { BaseController } from './baseController';

export class MessagesController extends BaseController {
  /**
   * Use this endpoint to send text messages, media, message templates to your customers.
   *
   * @param phoneNumberID
   * @param body            To send a message, you must first assemble a message object with the
   *                                          content you want to send.
   * @return Response from the API call
   */
  async sendMessage(
    phoneNumberID: string,
    body: Message,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<SendMessageResponse>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      phoneNumberID: [phoneNumberID, string()],
      body: [body, messageSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.appendTemplatePath`/${mapped.phoneNumberID}/messages`;
    return req.callAsJson(sendMessageResponseSchema, requestOptions);
  }

  /**
   * When you receive an incoming message from Webhooks, you could use messages endpoint to change the
   * status of it to read.
   * We recommend marking incoming messages as read within 30 days of receipt.
   * **Note**: You cannot mark outgoing messages you sent as read.
   *
   * You need to obtain the **`message_id`** of the incoming message from Webhooks.
   *
   * @param phoneNumberID
   * @param body
   * @return Response from the API call
   */
  async markMessageAsRead(
    phoneNumberID: string,
    body: MarkMessageAsReadRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<SuccessResponse>> {
    const req = this.createRequest('PUT');
    const mapped = req.prepareArgs({
      phoneNumberID: [phoneNumberID, string()],
      body: [body, markMessageAsReadRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.appendTemplatePath`/${mapped.phoneNumberID}/messages`;
    return req.callAsJson(successResponseSchema, requestOptions);
  }
}
